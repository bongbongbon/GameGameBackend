name: CI/CD Pipeline - Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot services with Gradle
        run: |
          cd eureka-server
          ./gradlew build
          cd ..
          cd api-gateway
          ./gradlew build
          cd ..
          cd auth-service
          ./gradlew build
          cd ..
          cd quiz-service
          ./gradlew build
          cd ..


      - name: Build with Gradle
        run: |
          chmod 777 ./gradlew
          ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/eureka-server eureka-server
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway api-gateway
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/quiz-service quiz-service
          docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/auth-service auth-service


      - name: Deploy docker-compose
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.LIVE_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |


            
            # Pull backend images
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eureka-server:latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/quiz-service:latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest

            # Create application.yml from GitHub Secret
            mkdir -p ./config
            echo "${{ secrets.AUTH_YML }}" > ./config/application.yml

            
            # Deploy backend services
            sudo docker-compose -f docker-compose-backend.yml down
            sudo docker image prune -f
            sudo docker-compose -f docker-compose-backend.yml up -d
