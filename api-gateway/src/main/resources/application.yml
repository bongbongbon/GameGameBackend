server:
  port: 8080



eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/


spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000' # 허용하려는 도메인
            allow-credentials: true # 요청 시 인증 정보를 전송하도록 허가
            allowedHeaders: '*' # 허용하려는 헤더
            allowedMethods: # 허용하려는 HTTP 메서드
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes:
          # 유저 서비스
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          # 퀴즈 서비스
        - id: quiz-service
          uri: lb://QUIZ-SERVICE
          predicates:
            - Path=/api/quizzes/getAll/**
          filters:
            - RewritePath=/quiz-service/(?<segment>.*), /$\{segment}
          # 인증 서비스
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}

  jwt:
    header: Authorization
    prefix: Bearer
    tokenExpirationTime: 727380891
    secret: c3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwtc3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwtc3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwK

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3_MULTI
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"

logging:
  pattern:
    level: "%5p [%X{traceId:-},%X{spanId:-}]"